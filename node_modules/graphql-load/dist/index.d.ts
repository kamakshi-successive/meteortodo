import { GraphQLModule, ResolverMap } from './defs';
export declare class Loader {
    protected typeDefs: Array<string>;
    protected resolvers: Array<ResolverMap>;
    load(modules: GraphQLModule | Array<GraphQLModule>): void;
    getSchema(): GraphQLModule;
    getTypeDefs(): string[];
    getResolvers(): ResolverMap[];
    static wrap(rootType: any, _module: GraphQLModule | GraphQLModule[]): {
        typeDefs: any[];
        resolvers: any[];
    };
}
declare const instance: Loader;
export default instance;
declare const load: any;
declare const getSchema: any;
declare const wrap: typeof Loader.wrap;
export { load, getSchema, wrap };
